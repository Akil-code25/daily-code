import nltk
from nltk.corpus import words
#nltk.download('words')
word_list = words.words()

stage_0 = (
  " +--+",
  " |  |",
  "    |",
  "    |",
  "    |",
  "    |",
  "========="
)

stage_1 = (
  " +--+",
  " |  |",
  " O  |",
  "    |",
  "    |",
  "    |",
"========="
)

stage_2 = (
  " +--+",
  " |  |",
  " O  |",
  " |  |",
  "    |",
  "    |",
"========="
)

stage_3 = (
  " +--+",
  " |  |",
  " O  |",
  "/|  |",
  "    |",
  "    |",
"========="
)

stage_4 = (
  " +--+",
  " |  |",
  " O  |",
  "/|\ |",
  "    |",
  "    |",
"========="
)
stage_5 = (
  " +--+",
  " |  |",
  " O  |",
  "/|\ |",
  "/   |",
  "    |",
"========="
)
stage_6 = (
 "  +--+",
 "  |  |",
 "  O  |",
 " /|\ |",
 " / \ |",
 "     |",
"========="
)

stages = [stage_0,stage_1,stage_2,stage_3,stage_4,stage_5,stage_6]

def print_stage(stage):
    for line in stage:
        print(line)
    print("\n")

print_stage(stages[0])
associate = (random.randint(0, 236736))
word = word_list[associate]
empty = ["_"]*len(word)
for character in empty:
    print(character, end = " ")
print("\n")
score = 6
counter = 0
used = []
def emptyprint(empty):
    for letter in empty:
        print(letter, end = "")
    print(end="\n\n")

def wrongprint(used):
    for letter in used:
        if letter == used[0]:
            print(letter, end = "")
        else:
            print(f", {letter}", end = "")





while True:
    counter = 0
    wrong = 0
    print("Wrong letters: ", end = "")
    wrongprint(used)
    letter = input(f"\nChoose a letter: ")

    for character in word:

        if letter == character:
            empty[counter] = letter
        else:
            wrong = wrong + 1
        counter = counter + 1
    if wrong == len(word):
        used.append(letter)
        print("Wrong!")
        score = score - 1
        print_stage(stages[6-score])
        if score == 1:
            print(f"You have {score} try remaining.")
        else:
            print(f"You have {score} tries remaining.")
    if score == 0:
        print(f"You lose. The word is {word}.")
        break
    emptyprint(empty)

    if "_" not in empty:
        print (f"The word is {word}")

        print("Well done.")
        break
